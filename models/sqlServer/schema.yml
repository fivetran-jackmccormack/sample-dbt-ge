
version: 2

models:
- name: unionTeachers
  description: "A dbt model to union TEACHER data from many SQL Server Schemas"
  tests: 
  - dbt_expectations.expect_table_columns_to_match_set:
        column_list: ["ID", "LastName", "FirstName", "Subject","Schema_Name","_fivetran_deleted","_fivetran_synced"]
        transform: upper
  - dbt_expectations.expect_table_column_count_to_equal:
        value: 7
  - dbt_expectations.expect_table_columns_to_not_contain_set:
        column_list: ["Age", "Address"]
  columns:
    - name: id
      description: "The primary key for this table"
      tests:
        - unique
        - not_null
        - dbt_expectations.expect_column_to_exist


- name: unionStudents
  description: "A dbt model to union STUDENT data from many SQL Server Schemas"
  tests: 
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
        compare_model: ref("unionTeachers")
        #factor: 1 # (Optional)
        row_condition: "id is not null" # (Optional)
        compare_row_condition: "id is not null" # (Optional)
  - dbt_expectations.expect_table_columns_to_not_contain_set:
        column_list: ["Subject", "Address"]
  columns:
    - name: id
      description: "The primary key for this table"
      tests:
        - unique
        - not_null
        - dbt_expectations.expect_column_to_exist
    - name: Age
      description: "Column containing age of students"
      tests:
        - not_null
        - dbt_expectations.expect_column_stdev_to_be_between:
              min_value: 0 # (Optional)
              max_value: 3 # (Optional)
              #group_by: [group_id, other_group_id, ...] # (Optional)
              row_condition: "id is not null" # (Optional)
              strictly: false # (Optional. Default is 'false'. Adds an 'or equal to' to the comparison operator for min/max)

- name: relations
  description: "To get relations from db"





